Top ten best ten codes which use less process time:
A：
#include<iostream>
#include<cstdio>

using namespace std;
namespace miao
{
	int left , right ;
}

void gcd( int a , int b )
{
	if(a == 0 && b == 0 )
		return;
	if(a > b )
		{
			if(a % b == 0 )
				{
					miao::left+=a/b - 1;
					gcd(1,b);
				}
			else
				{
					miao::left+=a/b;
					gcd(a%b,b);
				}
		}
	if(a < b )
		{
			if(b % a == 0 )
				{
					miao::right+=b/a-1;
					gcd(a,1);
				}
			else
				{
					miao::right+=b/a;
					gcd(a,b%a);
				}
		}
}



int main()
{
	int t;
	cin >> t ;
	int cas = 1 ;
	while(t--)
		{
			int i , j ;
			cin>> i >> j ;
			miao::left=0,miao::right=0;
			gcd(i,j);
			printf("Scenario #%d:\n",cas++);
			cout<< miao::left <<' '<< miao::right << endl << endl  ;
		}

}

E：#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
using namespace std ;
char s[1000010];
int dif[30];
int main()
{
	int t ;
	//cin >> t ;
	scanf("%d",&t);
	while( t-- )
		{
			memset(dif,0,sizeof(dif) ) ;
			int k ;
			long long int ans = 0 ;
			//cin >> s >> k ;
			scanf("%s%d",s,&k);
			int len = strlen(s);
			int diff = 0;
			int r = 0;
			for( int i = 0; i < len ; i++)
				{
					while( diff < k && r < len)
						{
							dif[ s[r] - 'a' ]++;
							if( dif[ s[r] - 'a'] == 1) diff++;
							r++;
						}
					if( diff == k ) ans+= len - r + 1;
					dif[ s[i] - 'a' ]--;
					if( dif[ s[i] -'a' ] == 0 ) diff-- ;
				}
			//	cout << ans << endl ;
			printf("%lld\n",ans);
		}
	return 0 ;
}

F：
#include<stdio.h>
int main()
{
 long long gao[40],di[40];
 int i,n;
 gao[0]=1;
 di[0]=0;
 for(i=1;i<34;i++)
 {
     gao[i]=gao[i-1]*3+di[i-1]*2;
     di[i]=gao[i-1]+di[i-1];
 }
 while (~scanf("%d",&n)&&n!=-1)
 {
        printf("%lld, %lld\n",gao[n],di[n]);
 }
 return 0;
}

G：
#include<iostream>
#include<cmath>
#include<cstring>
using namespace std;
int main()
{
	long long array[10001];
	memset(array,0,sizeof(array));
	for(int i = 2,j = 4;i <= 10000;i++,j+=i*2-1)
	{
		if(!array[i])
		for(int k = j;k < 10000;k += i)
		array[k] = 1;
	}
	/*for(int i = 2;i < 10000;i++)
	{
		if(!array[i])
		cout << i << " ";
	}*/
	int num = 0;
	while(cin >> num)
	{
		if(num == 0)
		return 0;
		int sum = 0;
		int temp = num/2;
		for(int i = 2;i <= temp;i++)
		{
			int a = num-i;
			if(!array[i] && !array[a] && a!=i)
			{
				sum++;
			}
		}
		cout << sum <<endl;
	}
}

H：
#include <stdio.h>
#include <iostream>
#include <algorithm>
using namespace std;
int main()
{
	int i,k,j,a[100000],s=0;
	scanf("%d",&i);
	while(i--)
	{
		scanf("%d",&j);
	    for(k=0;k<j;k++)
	    scanf("%d",&a[k]);
	    sort(a,a+j);
	    int t=(j)/2;
	    for(int m=0;m<j;m++)
	    if(a[m]<a[t])
	    s+=a[t]-a[m];
	    else
	    s+=a[m]-a[t];
	    printf("%d\n",s);
		s=0;
	}
	return 0;
}

I：
import java.util.*;

public class Main
{
    static public int gcd(int a, int b)
    {
        if (b != 0)
            return gcd(b, a % b);
        else
            return a;
    }

    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        int a, b;
        while (input.hasNext())
        {
            a = input.nextInt();
            b = input.nextInt();
            int x = a;
            int l = gcd(a, b);
            a /= l;
            b /= l;
            if (a * a - 4 * b < 0)
                System.out.println("No Solution");
            else
            {
                int ans = (a + (int) Math.sqrt((a * a - 4 * b))) / 2;
                ans *= l;
                int cnt = x - ans;
                if (cnt * ans / gcd(cnt, ans) == b * l)
                    System.out.println(cnt + " " + ans);
                else
                    System.out.println("No Solution");
            }
        }
    }

}
